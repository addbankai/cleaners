(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[177],{30347:()=>{},35839:(e,t,l)=>{"use strict";l.a(e,async(e,o)=>{try{l.d(t,{WalletProvider:()=>d,v:()=>u});var a=l(95155),n=l(12115),r=l(40014),i=e([r]);r=(i.then?(await i)():i)[0];let c="connectedWalletName",s=(0,n.createContext)(void 0),d=e=>{let{children:t}=e,[l,o]=(0,n.useState)(null),[i,d]=(0,n.useState)(null),[u,f]=(0,n.useState)(null),[v,w]=(0,n.useState)(!1),[m,b]=(0,n.useState)(!0),[h,_]=(0,n.useState)(null),[y,S]=(0,n.useState)([]),[p,g]=(0,n.useState)(null);(0,n.useEffect)(()=>{(async()=>{b(!0),_(null);try{let e="mainnetVbjVldxKBO4c6U4z5IB6s7hivqfNQ9n7";if(!e)throw Error("NEXT_PUBLIC_BLOCKFROST_API_KEY not set.");let t=await r.yN.new(new r.OC("https://cardano-mainnet.blockfrost.io/api/v0",e),"Mainnet");o(t);let l=[];window.cardano&&Object.keys(window.cardano).forEach(e=>{var t,o;window.cardano&&"function"==typeof(null===(t=window.cardano[e])||void 0===t?void 0:t.enable)&&(null===(o=window.cardano[e])||void 0===o?void 0:o.apiVersion)&&l.push(e)}),S(l),console.log("Available wallets:",l);let a=localStorage.getItem(c);a&&l.includes(a)?(console.log("Found last connected wallet in storage: ".concat(a)),g(a)):(g(null),localStorage.removeItem(c))}catch(e){console.error("Initialization error:",e),_("Failed to initialize connection. Please refresh."),localStorage.removeItem(c)}finally{b(!1)}})()},[]);let P=(0,n.useCallback)(async e=>{var t;if(!l||!(null===(t=window.cardano)||void 0===t?void 0:t[e]))return _("Lucid not initialized or wallet '".concat(e,"' not found.")),Promise.reject(Error("Wallet '".concat(e,"' not found.")));b(!0),_(null);try{let t=window.cardano[e];if(!t||"function"!=typeof t.enable)throw Error("Wallet API or enable function for '".concat(e,"' not found."));let o=await t.enable();l.selectWallet(o);let a=await l.wallet.address();d(o),f(a),w(!0),g(e),localStorage.setItem(c,e),console.log("Connected to ".concat(e,", Address: ").concat(a))}catch(l){console.error("Failed to connect to ".concat(e,":"),l);let t=l instanceof Error?l.message:String(l);throw _("Failed to connect wallet: ".concat(t)),w(!1),d(null),f(null),g(null),localStorage.removeItem(c),l}finally{b(!1)}},[l]),E=(0,n.useCallback)(()=>{d(null),f(null),w(!1),g(null),localStorage.removeItem(c),console.log("Wallet disconnected.")},[]);return(0,a.jsx)(s.Provider,{value:{lucid:l,walletApi:i,address:u,isConnected:v,isLoading:m,error:h,availableWallets:y,lastConnectedWallet:p,connectWallet:P,disconnectWallet:E},children:t})},u=()=>{let e=(0,n.useContext)(s);if(void 0===e)throw Error("useWallet must be used within a WalletProvider");return e};o()}catch(e){o(e)}})},66039:e=>{e.exports={style:{fontFamily:"'Poppins', 'Poppins Fallback'",fontStyle:"normal"},className:"__className_92f080",variable:"__variable_92f080"}},70093:e=>{e.exports={style:{fontFamily:"'Orbitron', 'Orbitron Fallback'",fontStyle:"normal"},className:"__className_93322f",variable:"__variable_93322f"}},88887:(e,t,l)=>{Promise.resolve().then(l.t.bind(l,66039,23)),Promise.resolve().then(l.t.bind(l,70093,23)),Promise.resolve().then(l.t.bind(l,30347,23)),Promise.resolve().then(l.bind(l,35839))}},e=>{var t=t=>e(e.s=t);e.O(0,[836,14,441,684,358],()=>t(88887)),_N_E=e.O()}]);